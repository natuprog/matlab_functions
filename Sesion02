format compact
%Primera hora: resolucion de una ENL y un SENL
type f2_1
??? Error using ==> type
f2_1.m: File not found.

uiopen('C:\MATLAB6p1\work\f2_1.m',1)
fschange('C:\MATLAB6p1\work\f2_1.m');
clear f2_1
type f2_1

function [ y ] = f2_1( x )

end
%F2_1 Summary of this function goes here
%  Detailed explanation goes here

uiopen('C:\MATLAB6p1\work\f2_1.m',1)
fschange('C:\MATLAB6p1\work\f2_1.m');
clear f2_1
uiopen('C:\MATLAB6p1\work\bipart.m',1)
fschange('C:\MATLAB6p1\work\bipart.m');
clear bipart
realmin
ans =
  2.2251e-308
ans
ans =
  2.2251e-308
realmin = 0
realmin =
     0
ans
ans =
  2.2251e-308
realmin == 0
ans =
     1
ans
ans =
     1
format long; [x,e,tol,k] = bipart('f2_1',1,2,10)
??? Error using ==> bipart
Too many output arguments.

type bipart

% METODO DE BIPARTICION
% function [x, e, tol] = bipart[F,a,b,n]
% a = extremo inferior del intervalo inicial
% b = extremo superior del intervalo inicial
% n = numero de iteraciones
% x = solucion devuelta
% e = condicion de error (e = 0, correco. e = 1, intervalo inicial incorrecto)
% tol = cota de |x' - x| (x` = solucion aproximada, x = solucion verdadera)
function [x, e, tol] = bipart(F,a,b,n)

FA = feval(F,a); 
FB = feval(F,b);
x = (a+b)/2;
FX = feval(F,x);
e = 0;

if FA * FB > 0, e = 1, break, end
if FA == 0, x = a, break, end
if FB == 0, x = b, break, end

%Iteraciones
for k = 1:n
    FX = feval(F,x); 
    if FX == 0, break, end
    if FA*FX < 0,
        b = x; 
        FB = feval(F,b);
    else
        x = (a+b)/2;
end
tol = (b-a)/2;


end
uiopen('C:\MATLAB6p1\work\bipart2.m',1)
fschange('C:\MATLAB6p1\work\bipart2.m');
clear bipart2
uiopen('C:\MATLAB6p1\work\bipart.m',1)
fschange('C:\MATLAB6p1\work\bipart.m');
clear bipart
clc
f = inline('2*x^2 - cos(x/3)');
f(1)
ans =
   1.05504305368526
f(0)
ans =
    -1
a = 0; b = 1
b =
     1
[x,e,tol] = bipart(f,a,b,4);
??? Error: File: C:\MATLAB6p1\work\bipart.m Line: 1 Column: 17
Missing operator, comma, or semicolon.

uiopen('C:\MATLAB6p1\work\bipart.m',1)
fschange('C:\MATLAB6p1\work\bipart.m');
clear bipart
[x,e,tol] = bipart(f,a,b,4);
??? Error: File: C:\MATLAB6p1\work\bipart.m Line: 25 Column: 4
"end" expected, "End of Input" found.

uiopen('C:\MATLAB6p1\work\bipart.m',1)
fschange('C:\MATLAB6p1\work\bipart.m');
clear bipart
[x,e,tol] = bipart(f,a,b,4);
??? Error: File: C:\MATLAB6p1\work\bipart.m Line: 26 Column: 4
"end" expected, "End of Input" found.

fschange('C:\MATLAB6p1\work\bipart.m');
clear bipart
[x,e,tol] = bipart(f,a,b,4);
??? Undefined function or variable 'f'.

Error in ==> C:\MATLAB6p1\work\bipart.m
On line 14  ==>         FA = f(a); FB = f(b); FX = f(x);

fschange('C:\MATLAB6p1\work\bipart.m');
clear bipart
[x,e,tol] = bipart(f,a,b,4);
Warning: One or more output arguments not assigned during call to 'bipart'.
[x,e,tol] = bipart(f,a,b,4)
Warning: One or more output arguments not assigned during call to 'bipart'.
x =
   0.68750000000000
tol =
   0.03125000000000   0.71875000000000   0.65625000000000
uiopen('C:\MATLAB6p1\work\bipart.m',1)
fschange('C:\MATLAB6p1\work\bipart.m');
clear bipart
fschange('C:\MATLAB6p1\work\bipart.m');
clear bipart
[x,e,tol] = bipart(f,a,b,4)
Warning: One or more output arguments not assigned during call to 'bipart'.
x =
   0.68750000000000
tol =
   0.03125000000000   0.71875000000000   0.65625000000000
e
Warning: Reference to uninitialized variable e.
clear
clc
fschange('C:\MATLAB6p1\work\bipart.m');
clear bipart
[x,e,tol] = bipart(f,a,b,4)
??? Undefined function or variable 'f'.

a
??? Undefined function or variable 'a'.

clc
f = inline('2*x - 3');
f(0.3
??? f(0.3
         |
Error: ")" expected, "end of line" found.

f(0.3)
ans =
  -2.40000000000000
f(2.3)
ans =
   1.60000000000000
a = 0.3; b = 2.3;
n = 4;
[x,e,tol] = bipart(f,a,b,n)
x =
   1.42500000000000
e =
     0
tol =
   0.03125000000000   1.45625000000000   1.39375000000000
n  = 10;
[x,e,tol] = bipart(f,a,b,n)
x =
   1.50117187500000
e =
     0
tol =
   0.00048828125000   1.50166015625000   1.50068359375000
fschange('C:\MATLAB6p1\work\bipart.m');
clear bipart
[x,e,tol] = bipart(f,a,b,n)
x =
   1.50117187500000
e =
     0
tol =
   0.00097656250000   1.50214843750000   1.50019531250000
f(x)
ans =
   0.00234375000000
fschange('C:\MATLAB6p1\work\bipart.m');
clear bipart
[x,e,tol] = bipart(f,a,b,n)
x =
   1.50117187500000
e =
     0
tol =
   0.00195312500000   1.50312500000000   1.49921875000000
fschange('C:\MATLAB6p1\work\bipart.m');
clear bipart
[x,e,tol] = bipart(f,a,b,n)
x =
   1.50117187500000
e =
     0
tol =
   0.00195312500000   1.50312500000000   1.49921875000000
clear
clc
f = inline('3*exp(2^x) - 0.928 * x^2 + 0.43 * cos(x/4.2)');
f (1)
ans =
  21.65703755794337
f (0)
ans =
   8.58484548537714
f (-1)
ans =
   4.43603307325180
f (-3)
ans =
  -4.62766326171822
a = -3; b = -1;
n = 10;
[x,e,tol] = bipart(f,a,b,n)
x =
  -2.11523437500000
e =
     0
tol =
   0.00195312500000  -2.11328125000000  -2.11718750000000
f(x)
ans =
   0.00338978545161
n = 14;
[x,e,tol] = bipart(f,a,b,n)
x =
  -2.11608886718750
e =
     0
tol =
   0.00012207031250  -2.11596679687500  -2.11621093750000
f (x)
ans =
   -5.241495478142677e-004
uiopen('C:\MATLAB6p1\work\newton.m',1)
uiopen('C:\MATLAB6p1\work\bipart.m',1)
fschange('C:\MATLAB6p1\work\bipart.m');
clear bipart
fschange('C:\MATLAB6p1\work\newton.m');
clear newton
[x,e,tol] = bipart(f,a,b,n)
x =
  -2.11608886718750
e =
     0
tol =
   0.00012207031250  -2.11596679687500  -2.11621093750000
[x,e,tol,k] = bipart(f,a,b,n)
x =
  -2.11608886718750
e =
     0
tol =
   0.00012207031250  -2.11596679687500  -2.11621093750000
k =
    14
clc
clear all;
uiopen('C:\MATLAB6p1\work\newton.m',1)
-2
ans =
    -2
abs(ans
??? abs(ans
           |
Error: ")" expected, "end of line" found.

abs(ans)
ans =
     2
fschange('C:\MATLAB6p1\work\newton.m');
clear newton
fschange('C:\MATLAB6p1\work\newton.m');
clear newton
fschange('C:\MATLAB6p1\work\newton.m');
clear newton
fschange('C:\MATLAB6p1\work\newton.m');
clear newton
fschange('C:\MATLAB6p1\work\newton.m');
clear newton
clear all;
clc
f = inline('2x^2 - 4.3');
df = inline('4*x');
f = inline('2*x^2 - 4.3');
clc
x0 = 0.45;
tol = 0.01;
n = 5;
[x,e,k] = newton(f,df,x0,n,tol)
Warning: File: C:\MATLAB6p1\work\newton.m Line: 35 Column: 1
Unmatched "end".
x =
   1.46628783435974
e =
     0
k =
     5
uiopen('C:\MATLAB6p1\work\newton.m',1)
f
f =
     Inline function:
     f(x) = 2*x^2 - 4.3
n = 10;
[x,e,k] = newton(f,df,x0,n,tol)
x =
   1.46628782986152
e =
     0
k =
    10
f(x)
ans =
    8.881784197001252e-016
fplot('f3', [-2 2]), grid
fplot('f3', [-10 10]), grid
syms x y z real
f1 = 2*x^3 - 4*x-y-18
f1 =
2*x^3-4*x-y-18
f2 = -x+2*y^3-4*y-z-54
f2 =
-x+2*y^3-4*y-z-54
f3 = -y+2*z^3-4*z-133.2
f3 =
-y+2*z^3-4*z-666/5
F = [f1;f2;f3]
F =
[     2*x^3-4*x-y-18]
[  -x+2*y^3-4*y-z-54]
[ -y+2*z^3-4*z-666/5]
JF = jacobian(F)
JF =
[ 6*x^2-4,      -1,       0]
[      -1, 6*y^2-4,      -1]
[       0,      -1, 6*z^2-4]
type f5
??? Error using ==> type
f5.m: File not found.

uiopen('C:\MATLAB6p1\work\f5.m',1)
fschange('C:\MATLAB6p1\work\f5.m');
clear f5
uiopen('C:\MATLAB6p1\work\jf5.m',1)
clc
diary Sesion02
e^2
ans =
     0
exp(1)
ans =
   2.71828182845905
exp(2)
ans =
   7.38905609893065
%Manejo de polinomios
p = [1 0 0 0 1 -1]
p =
     1     0     0     0     1    -1
q = [1 -1]
q =
     1    -1
p- q
??? Error using ==> -
Matrix dimensions must agree.

p - [ 0 0 0 0 q]
ans =
     1     0     0     0     0     0
roots(ans)
ans =
     0
     0
     0
     0
     0
roots([1 0 0 0 0 0 -1])
ans =
 -1.00000000000000                    
 -0.50000000000000 + 0.86602540378444i
 -0.50000000000000 - 0.86602540378444i
  0.50000000000000 + 0.86602540378444i
  0.50000000000000 - 0.86602540378444i
  1.00000000000000                    
format compact
roots([1 0 0 0 0 0 -1])
ans =
 -1.00000000000000                    
 -0.50000000000000 + 0.86602540378444i
 -0.50000000000000 - 0.86602540378444i
  0.50000000000000 + 0.86602540378444i
  0.50000000000000 - 0.86602540378444i
  1.00000000000000                    
format short
roots([1 0 0 0 0 0 -1])
ans =
  -1.0000          
  -0.5000 + 0.8660i
  -0.5000 - 0.8660i
   0.5000 + 0.8660i
   0.5000 - 0.8660i
   1.0000          
roots([1 0 0 0 0 -1]);
roots([1 0 0 0 0 -1])
ans =
  -0.8090 + 0.5878i
  -0.8090 - 0.5878i
   0.3090 + 0.9511i
   0.3090 - 0.9511i
   1.0000          
roots([1 0 0 1])
ans =
  -1.0000          
   0.5000 + 0.8660i
   0.5000 - 0.8660i
p = [1 -4 2 1]
p =
     1    -4     2     1
polyder(p)
ans =
     3    -8     2
polyint(p,0,pi)
??? Error using ==> polyint
Too many input arguments.

help polyint

 POLYINT Integrate polynomial analytically.
    POLYINT(P,K) returns a polynomial representing the integral
    of polynomial P, using a scalar constant of integration K.
 
    POLYINT(P) assumes a constant of integration K=0.
 
  See also POLYDER, POLYVAL, POLYVALM, POLYFIT.

help roots

 ROOTS  Find polynomial roots.
    ROOTS(C) computes the roots of the polynomial whose coefficients
    are the elements of the vector C. If C has N+1 components,
    the polynomial is C(1)*X^N + ... + C(N)*X + C(N+1).
 
    See also POLY, RESIDUE, FZERO.

help poly

 POLY Convert roots to polynomial.
    POLY(A), when A is an N by N matrix, is a row vector with
    N+1 elements which are the coefficients of the
    characteristic polynomial, DET(lambda*EYE(SIZE(A)) - A) .
 
    POLY(V), when V is a vector, is a vector whose elements are
    the coefficients of the polynomial whose roots are the
    elements of V . For vectors, ROOTS and POLY are inverse
    functions of each other, up to ordering, scaling, and
    roundoff error.
 
    ROOTS(POLY(1:20)) generates Wilkinson's famous example.
 
    See also ROOTS, CONV, RESIDUE, POLYVAL.

 Overloaded methods
    help sym/poly.m

help residue

 RESIDUE Partial-fraction expansion (residues).
    [R,P,K] = RESIDUE(B,A) finds the residues, poles and direct term of
    a partial fraction expansion of the ratio of two polynomials B(s)/A(s).
    If there are no multiple roots,
       B(s)       R(1)       R(2)             R(n)
       ----  =  -------- + -------- + ... + -------- + K(s)
       A(s)     s - P(1)   s - P(2)         s - P(n)
    Vectors B and A specify the coefficients of the numerator and
    denominator polynomials in descending powers of s.  The residues
    are returned in the column vector R, the pole locations in column
    vector P, and the direct terms in row vector K.  The number of
    poles is n = length(A)-1 = length(R) = length(P). The direct term
    coefficient vector is empty if length(B) < length(A), otherwise
    length(K) = length(B)-length(A)+1.
 
    If P(j) = ... = P(j+m-1) is a pole of multplicity m, then the
    expansion includes terms of the form
                 R(j)        R(j+1)                R(j+m-1)
               -------- + ------------   + ... + ------------
               s - P(j)   (s - P(j))^2           (s - P(j))^m
 
    [B,A] = RESIDUE(R,P,K), with 3 input arguments and 2 output arguments,
    converts the partial fraction expansion back to the polynomials with
    coefficients in B and A.
 
    Warning: Numerically, the partial fraction expansion of a ratio of
    polynomials represents an ill-posed problem.  If the denominator
    polynomial, A(s), is near a polynomial with multiple roots, then
    small changes in the data, including roundoff errors, can make
    arbitrarily large changes in the resulting poles and residues.
    Problem formulations making use of state-space or zero-pole
    representations are preferable.
 
    See also POLY, ROOTS, DECONV.

q = polyint (p), polyval(q, pi)-polyval(q,0)
q =
    0.2500   -1.3333    1.0000    1.0000         0
ans =
   -3.9782
% Regla de Barrow
x = 1:0.5:10; y = sin(x);
[x' y']
ans =
    1.0000    0.8415
    1.5000    0.9975
    2.0000    0.9093
    2.5000    0.5985
    3.0000    0.1411
    3.5000   -0.3508
    4.0000   -0.7568
    4.5000   -0.9775
    5.0000   -0.9589
    5.5000   -0.7055
    6.0000   -0.2794
    6.5000    0.2151
    7.0000    0.6570
    7.5000    0.9380
    8.0000    0.9894
    8.5000    0.7985
    9.0000    0.4121
    9.5000   -0.0752
   10.0000   -0.5440
plot(x,y)
x = -10:0.5;10; y = sin(x)/x;
plot(x,y)
x = -10:0.5:10; y = sin(x)./x;
Warning: Divide by zero.
plot(x,y)
plot(x,y), grid on
p
p =
     1    -4     2     1
x = -10:0.5:10; y = polyval(p,x);
plot(x,y), grid on
x = -2:0.1:4; y = polyval(p,x);
plot(x,y), grid on
r = roots(p)
r =
    3.3028
    1.0000
   -0.3028
hold on
plot(r(1), 0, 'o')
plot(r(2), 0, 'o')
plot(r(3), 0, 'o')
hold off
clf, plot(x,y), grid on, hold on; plot(r, zeros(3,1), 'o'); hold of
??? Error using ==> hold
Unknown command option.

clf, plot(x,y), grid on, hold on; plot(r, zeros(3,1), 'o'); hold off
clf, plot(x,y), grid on, hold on; plot(r,0,'o'); hold off
fplot('exp(x/4).*sin(x)', [0 10]), grid on
fplot('exp(x/4)*sin(x)', [0 10]), grid on
f = inline('exp(-x/4)*sin(x)')
f =
     Inline function:
     f(x) = exp(-x/4)*sin(x)
f(2)
ans =
    0.5515
f (2)
ans =
    0.5515
f(3)
ans =
    0.0667
f([2 3])
??? Error using ==> inlineeval
Error in inline expression ==> exp(-x/4)*sin(x)
??? Error using ==> *
Inner matrix dimensions must agree.

Error in ==> C:\MATLAB6p1\toolbox\matlab\funfun\@inline\subsref.m
On line 25  ==>     INLINE_OUT_ = inlineeval(INLINE_INPUTS_, INLINE_OBJ_.inputExpr, INLINE_OBJ_.expr);

f = inline('exp(-x/4).*sin(x)')
f =
     Inline function:
     f(x) = exp(-x/4).*sin(x)
f([2 3])
ans =
    0.5515    0.0667
f(2)
ans =
    0.5515
f(3)
ans =
    0.0667
%Tercera hora
%Operadores relacionales operan elemento a elemento
x = [3 5 9 ]
x =
     3     5     9
x > 3.0
ans =
     0     1     1
find(3 > 3.0)
ans =
     []
find(x > 3.0)
ans =
     2     3
t = find(x > 3.0)
t =
     2     3
size(t)
ans =
     1     2
x(t) = 10*ones(size(t))
x =
     3    10    10
help rem

 REM    Remainder after division.
    REM(x,y) is x - y.*fix(x./y) if y ~= 0.  By convention, REM(x,0) is NaN.
    The input x and y must be real arrays of the same size, or real scalars.
 
    REM(x,y) has the same sign as x while MOD(x,y) has the same sign as y.
    REM(x,y) and MOD(x,y) are equal if x and y have the same sign, but
    differ by y if x and y have different signs.
 
    REM is a built-in function.  An M-file for REM would be the same as
    MOD with "floor" replaced by "fix".
 
    See also MOD.

rem (13,5)
ans =
     3
A = magic(6)
A =
    35     1     6    26    19    24
     3    32     7    21    23    25
    31     9     2    22    27    20
     8    28    33    17    10    15
    30     5    34    12    14    16
     4    36    29    13    18    11
rem(magic(6), 5)
ans =
     0     1     1     1     4     4
     3     2     2     1     3     0
     1     4     2     2     2     0
     3     3     3     2     0     0
     0     0     4     2     4     1
     4     1     4     3     3     1
rem(magic(6), 5) ==0
ans =
     1     0     0     0     0     0
     0     0     0     0     0     1
     0     0     0     0     0     1
     0     0     0     0     1     1
     1     1     0     0     0     0
     0     0     0     0     0     0
find(rem(magic(6), 5) == 0)
ans =
     1
     5
    11
    28
    32
    33
    34
A
A =
    35     1     6    26    19    24
     3    32     7    21    23    25
    31     9     2    22    27    20
     8    28    33    17    10    15
    30     5    34    12    14    16
     4    36    29    13    18    11
A(5,2)
ans =
     5
A(11)
ans =
     5
%Predicados
A = [0 1 1; 0 1 1; 1 1 0]
A =
     0     1     1
     0     1     1
     1     1     0
B =  [1 0 0; 0 0 0; 0 0 1]
B =
     1     0     0
     0     0     0
     0     0     1
all(A)
ans =
     0     1     0
any(B)
ans =
     1     0     1
x = 1:3
x =
     1     2     3
y = 4:6
y =
     4     5     6
x + y
ans =
     5     7     9
%max, min, sum y prod operan por columnas
mas(x+y)
??? Undefined function or variable 'mas'.

max(x+y)
ans =
     9
[maximo, indice] = max(x,y)
??? Error using ==> max
Too many output arguments.

[maximo, indice] = max(x+y)
maximo =
     9
indice =
     3
A = [x;y]
A =
     1     2     3
     4     5     6
sum (A)
ans =
     5     7     9
sum(sum(A))
ans =
    21
sum(A,2)
ans =
     6
    15
y = [3 5 9 17]
y =
     3     5     9    17
diff(y)
ans =
     2     4     8
% Diferencias finitas progresivas (operador delta en interpolacion 
% Control del flujo de ejecucion
A
A =
     1     2     3
     4     5     6
for k = A, k, end
k =
     1
     4
k =
     2
     5
k =
     3
     6
for k = 1:4, k, end
k =
     1
k =
     2
k =
     3
k =
     4
for k = [3 4 26, k, end
??? for k = [3 4 26, k, end
                        |
Error: Illegal use of reserved keyword "end".

for k = [3 4 26], k, end
k =
     3
k =
     4
k =
    26
k = randperm(10), for k=1:4, y=x(k+2)-x(k),end;
k =
     8     2    10     7     4     3     6     9     5     1
y =
     2
???  Index exceeds matrix dimensions.

k = randperm(10), for k=1:4, y=x(k+2)-x(k),end
k =
     5     6     9     1     4     2    10     8     3     7
y =
     2
???  Index exceeds matrix dimensions.

x = randperm(10), k = 1:4; for k, y = x(k+2) - x(k),end;
??? x = randperm(10), k = 1:4; for k, y = x(k+2) - x(k),end;
                                    |
Error: "=" expected, "," found.

diary off
format compact
diary off
